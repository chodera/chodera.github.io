urls_1 <- urls[1:2600]
urls_2 <- urls[2601:5200]
urls_3 <- urls[5201:7800]
urls_4 <- urls[7801:length(urls)]
# Scrape date of construction, structure and coordinates from every page
## Set empty vectors
date_full <- c(character(0))
structure_full <- c(character(0))
# Scrape date of construction, structure and coordinates from every page
## Set empty vectors
date_full <- c(character(0))
structure_full <- c(character(0))
lat_full <- c(character(0))
lon_full <- c(character(0))
## Set progress bar
i <- 1
pb <- txtProgressBar(1, 2600, style=3)
## Loop over all urls
for (url in urls_1) {
# Load html
page <- read_html(url)
# Extract latitude and longitude from leaflet map (first coordinates that occur)
## Check if lat exists on page
lat_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lat":\\d+.\\d+')
## In case there is a lat extract it, otherwise set empty string
if (length(lat_exists) > 0) {
lat <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lat":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lat <- ""
} # end else if
## Check if lon exists on page
lon_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lon":\\d+.\\d+')
## In case there is a lon extract it, otherwise set empty string
if (length(lon_exists) > 0) {
lon <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lon":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lon <- ""
} # end else if
## Append to vector
lat_full <- c(lat_full, lat)
lon_full <- c(lon_full, lon)
# Extract date of construction and structure from infobox
# Get children of node "table.infobox"
children <- page %>%
html_nodes("table.infobox") %>%
html_children()
# Set empty string for construction date
date <- ""
# Loop over all children of node "table.infobox"
for (child in children) {
# Get text out of node child
child_text <- html_text(child)
# Extract date of construction of building
if (str_detect(child_text, "Date de construction")) {
# In case there is more than one date take the first one
if (nchar(date) == 0) {
date <- child_text
} # end if
} # end if
# Extract structure of building
else if (str_detect(child_text, "Structure")) {
structure <- child_text
} # end else if
} # end inner for-loop
# Append to vector
date_full <- c(date_full, date)
structure_full <- c(structure_full, structure)
# Progress bar
i = i + 1
setTxtProgressBar(pb, i)
} # end outer for-loop
# Put together to a tibble
df_1 <- bind_cols(tibble(urls[1:2600]),
tibble(link_texts[1:2600]),
tibble(date_full),
tibble(structure_full),
tibble(lat_full),
tibble(lon_full))
View(df_1)
# Save data
write_rds(df_1, "9_archi-wiki/data/archi-wiki_1.rds")
urls_2 <- urls[2601:5200]
## Set progress bar
i <- 1
pb <- txtProgressBar(1, 2600, style=3)
## Loop over all urls
for (url in urls_2) {
# Load html
page <- read_html(url)
# Extract latitude and longitude from leaflet map (first coordinates that occur)
## Check if lat exists on page
lat_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lat":\\d+.\\d+')
## In case there is a lat extract it, otherwise set empty string
if (length(lat_exists) > 0) {
lat <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lat":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lat <- ""
} # end else if
## Check if lon exists on page
lon_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lon":\\d+.\\d+')
## In case there is a lon extract it, otherwise set empty string
if (length(lon_exists) > 0) {
lon <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lon":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lon <- ""
} # end else if
## Append to vector
lat_full <- c(lat_full, lat)
lon_full <- c(lon_full, lon)
# Extract date of construction and structure from infobox
# Get children of node "table.infobox"
children <- page %>%
html_nodes("table.infobox") %>%
html_children()
# Set empty string for construction date
date <- ""
# Loop over all children of node "table.infobox"
for (child in children) {
# Get text out of node child
child_text <- html_text(child)
# Extract date of construction of building
if (str_detect(child_text, "Date de construction")) {
# In case there is more than one date take the first one
if (nchar(date) == 0) {
date <- child_text
} # end if
} # end if
# Extract structure of building
else if (str_detect(child_text, "Structure")) {
structure <- child_text
} # end else if
} # end inner for-loop
# Append to vector
date_full <- c(date_full, date)
structure_full <- c(structure_full, structure)
# Progress bar
i = i + 1
setTxtProgressBar(pb, i)
} # end outer for-loop
df_1_2 <- bind_cols(tibble(urls[1:5200]),
tibble(link_texts[1:5200]),
tibble(date_full),
tibble(structure_full),
tibble(lat_full),
tibble(lon_full))
# Save data
#write_rds(df_1, "9_archi-wiki/data/archi-wiki_1.rds")
write_rds(df_1_2, "9_archi-wiki/data/archi-wiki_2.rds")
View(df_1_2)
urls_3 <- urls[5201:7800]
urls <- read_rds("9_archi-wiki/data/urls.rds")
link_texts <- read_rds("9_archi-wiki/data/link_texts.rds")
urls_3 <- urls[5201:7800]
# Scrape date of construction, structure and coordinates from every page
## Set empty vectors
date_full <- c(character(0))
structure_full <- c(character(0))
lat_full <- c(character(0))
lon_full <- c(character(0))
## Set progress bar
i <- 1
pb <- txtProgressBar(1, 2600, style=3)
## Loop over all urls
for (url in urls_2) {
# Load html
page <- read_html(url)
# Extract latitude and longitude from leaflet map (first coordinates that occur)
## Check if lat exists on page
lat_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lat":\\d+.\\d+')
## In case there is a lat extract it, otherwise set empty string
if (length(lat_exists) > 0) {
lat <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lat":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lat <- ""
} # end else if
## Check if lon exists on page
lon_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lon":\\d+.\\d+')
## In case there is a lon extract it, otherwise set empty string
if (length(lon_exists) > 0) {
lon <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lon":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lon <- ""
} # end else if
## Append to vector
lat_full <- c(lat_full, lat)
lon_full <- c(lon_full, lon)
# Extract date of construction and structure from infobox
# Get children of node "table.infobox"
children <- page %>%
html_nodes("table.infobox") %>%
html_children()
# Set empty string for construction date
date <- ""
# Loop over all children of node "table.infobox"
for (child in children) {
# Get text out of node child
child_text <- html_text(child)
# Extract date of construction of building
if (str_detect(child_text, "Date de construction")) {
# In case there is more than one date take the first one
if (nchar(date) == 0) {
date <- child_text
} # end if
} # end if
# Extract structure of building
else if (str_detect(child_text, "Structure")) {
structure <- child_text
} # end else if
} # end inner for-loop
# Append to vector
date_full <- c(date_full, date)
structure_full <- c(structure_full, structure)
# Progress bar
i = i + 1
setTxtProgressBar(pb, i)
} # end outer for-loop
## Loop over all urls
for (url in urls_3) {
# Load html
page <- read_html(url)
# Extract latitude and longitude from leaflet map (first coordinates that occur)
## Check if lat exists on page
lat_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lat":\\d+.\\d+')
## In case there is a lat extract it, otherwise set empty string
if (length(lat_exists) > 0) {
lat <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lat":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lat <- ""
} # end else if
## Check if lon exists on page
lon_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lon":\\d+.\\d+')
## In case there is a lon extract it, otherwise set empty string
if (length(lon_exists) > 0) {
lon <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lon":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lon <- ""
} # end else if
## Append to vector
lat_full <- c(lat_full, lat)
lon_full <- c(lon_full, lon)
# Extract date of construction and structure from infobox
# Get children of node "table.infobox"
children <- page %>%
html_nodes("table.infobox") %>%
html_children()
# Set empty string for construction date
date <- ""
# Loop over all children of node "table.infobox"
for (child in children) {
# Get text out of node child
child_text <- html_text(child)
# Extract date of construction of building
if (str_detect(child_text, "Date de construction")) {
# In case there is more than one date take the first one
if (nchar(date) == 0) {
date <- child_text
} # end if
} # end if
# Extract structure of building
else if (str_detect(child_text, "Structure")) {
structure <- child_text
} # end else if
} # end inner for-loop
# Append to vector
date_full <- c(date_full, date)
structure_full <- c(structure_full, structure)
# Progress bar
i = i + 1
setTxtProgressBar(pb, i)
} # end outer for-loop
urls <- read_rds("9_archi-wiki/data/urls.rds")
# Load packages
library(tidyverse)
library(rvest)
urls <- read_rds("9_archi-wiki/data/urls.rds")
link_texts <- read_rds("9_archi-wiki/data/link_texts.rds")
urls_1 <- urls[1:2600]
urls_2 <- urls[2601:5200]
urls_3 <- urls[5201:7800]
urls_4 <- urls[7801:length(urls)]
# Scrape date of construction, structure and coordinates from every page
## Set empty vectors
date_full <- c(character(0))
structure_full <- c(character(0))
lat_full <- c(character(0))
lon_full <- c(character(0))
## Set progress bar
i <- 1
pb <- txtProgressBar(1, 2600, style=3)
## Loop over all urls
for (url in urls_3) {
# Load html
page <- read_html(url)
# Extract latitude and longitude from leaflet map (first coordinates that occur)
## Check if lat exists on page
lat_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lat":\\d+.\\d+')
## In case there is a lat extract it, otherwise set empty string
if (length(lat_exists) > 0) {
lat <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lat":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lat <- ""
} # end else if
## Check if lon exists on page
lon_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lon":\\d+.\\d+')
## In case there is a lon extract it, otherwise set empty string
if (length(lon_exists) > 0) {
lon <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lon":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lon <- ""
} # end else if
## Append to vector
lat_full <- c(lat_full, lat)
lon_full <- c(lon_full, lon)
# Extract date of construction and structure from infobox
# Get children of node "table.infobox"
children <- page %>%
html_nodes("table.infobox") %>%
html_children()
# Set empty string for construction date
date <- ""
# Loop over all children of node "table.infobox"
for (child in children) {
# Get text out of node child
child_text <- html_text(child)
# Extract date of construction of building
if (str_detect(child_text, "Date de construction")) {
# In case there is more than one date take the first one
if (nchar(date) == 0) {
date <- child_text
} # end if
} # end if
# Extract structure of building
else if (str_detect(child_text, "Structure")) {
structure <- child_text
} # end else if
} # end inner for-loop
# Append to vector
date_full <- c(date_full, date)
structure_full <- c(structure_full, structure)
# Progress bar
i = i + 1
setTxtProgressBar(pb, i)
} # end outer for-loop
df_3 <- bind_cols(tibble(urls[5201:7800]),
tibble(link_texts[5201:7800]),
tibble(date_full),
tibble(structure_full),
tibble(lat_full),
tibble(lon_full))
# Save data
#write_rds(df_1, "9_archi-wiki/data/archi-wiki_1.rds")
#write_rds(df_1_2, "9_archi-wiki/data/archi-wiki_2.rds")
write_rds(df_3, "9_archi-wiki/data/archi-wiki_3.rds")
# Scrape date of construction, structure and coordinates from every page
## Set empty vectors
date_full <- c(character(0))
structure_full <- c(character(0))
lat_full <- c(character(0))
lon_full <- c(character(0))
## Set progress bar
i <- 1
pb <- txtProgressBar(1, 2600, style=3)
## Loop over all urls
for (url in urls_4) {
# Load html
page <- read_html(url)
# Extract latitude and longitude from leaflet map (first coordinates that occur)
## Check if lat exists on page
lat_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lat":\\d+.\\d+')
## In case there is a lat extract it, otherwise set empty string
if (length(lat_exists) > 0) {
lat <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lat":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lat <- ""
} # end else if
## Check if lon exists on page
lon_exists <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_detect('"lon":\\d+.\\d+')
## In case there is a lon extract it, otherwise set empty string
if (length(lon_exists) > 0) {
lon <- page %>%
html_nodes("#map_leaflet_1") %>%
html_text() %>%
str_extract('"lon":\\d+.\\d+') %>%
str_extract("\\d+.\\d+")
} else {
lon <- ""
} # end else if
## Append to vector
lat_full <- c(lat_full, lat)
lon_full <- c(lon_full, lon)
# Extract date of construction and structure from infobox
# Get children of node "table.infobox"
children <- page %>%
html_nodes("table.infobox") %>%
html_children()
# Set empty string for construction date
date <- ""
# Loop over all children of node "table.infobox"
for (child in children) {
# Get text out of node child
child_text <- html_text(child)
# Extract date of construction of building
if (str_detect(child_text, "Date de construction")) {
# In case there is more than one date take the first one
if (nchar(date) == 0) {
date <- child_text
} # end if
} # end if
# Extract structure of building
else if (str_detect(child_text, "Structure")) {
structure <- child_text
} # end else if
} # end inner for-loop
# Append to vector
date_full <- c(date_full, date)
structure_full <- c(structure_full, structure)
# Progress bar
i = i + 1
setTxtProgressBar(pb, i)
} # end outer for-loop
df_4 <- bind_cols(tibble(urls[7801:length(urls)]),
tibble(link_texts[7801:length(urls)]),
tibble(date_full),
tibble(structure_full),
tibble(lat_full),
tibble(lon_full))
# Save data
#write_rds(df_1, "9_archi-wiki/data/archi-wiki_1.rds")
#write_rds(df_1_2, "9_archi-wiki/data/archi-wiki_2.rds")
#write_rds(df_3, "9_archi-wiki/data/archi-wiki_3.rds")
write_rds(df_4, "9_archi-wiki/data/archi-wiki_4.rds")
View(df_4)
