# Load packages
library(tidyverse)
library(sylly)
# Load data
bas_rhin <- read_csv("https://dwitkowski.eu/assets/data/bas_rhin.csv")
# Get name column
bas_rhin_noms <- bas_rhin %>%
pull(nom)
# First thing to clean up is possible extensions of the place names, such as river names (e.g. like sur-Zorn or les-Bains).
bas_rhin_noms <- str_split(bas_rhin_noms, "-") %>%
map_chr(tail(1))
# Define dictionary for syllables
## French
url.fr.pattern <- url("http://tug.ctan.org/tex-archive/language/hyph-utf8/tex/generic/hyph-utf8/patterns/txt/hyph-fr.pat.txt")
hyph.fr <- read.hyph.pat(url.fr.pattern, lang="fr")
close(url.fr.pattern)
## German
url.de.pattern <- url("http://tug.ctan.org/tex-archive/language/hyph-utf8/tex/generic/hyph-utf8/patterns/txt/hyph-de-1996.pat.txt")
hyph.de <- read.hyph.pat(url.de.pattern, lang="de")
close(url.de.pattern)
# Split into syllables
## based on French dictionary
syllables_fr <- hyphen(bas_rhin_noms, hyph.pattern=hyph.fr) %>%
hyphenText() %>%
mutate(id = row_number()) %>%
select(id, french = word)
## based on German dictionary
syllables_de <- hyphen(bas_rhin_noms, hyph.pattern=hyph.de) %>%
hyphenText() %>%
mutate(id = row_number()) %>%
select(id, german = word)
# Merge data sets
syllables <- left_join(syllables_fr, syllables_de, by = "id")
# Compare the syllables based on the two dictionaries
syllables %>%
count(french == german)
# Inspect differences manually
syllables %>%
filter(french != german) %>%
View()
## There are some manual corrections necessary, for example uniting some syllables
## (like -wil and -ler) to get the correct suffixes.
syllables_de <- syllables_de %>%
mutate(german = str_replace_all(german,
c("wil-ler" = "willer",
"hof-fen" = "hoffen",
"hou-sen" = "housen",
"hau-sen" = "hausen",
"mun-ster" = "munster",
"kir-chen" = "kirchen",
"ber-gen" = "bergen",
"sheim" = "heim",
"zheim" = "heim",
"schwiller" = "willer",
"dertheim" = "heim"))) %>%
pull(german)
# Extract suffix
suffixes <- str_split(syllables_de, "-") %>%
sapply(tail, 1)
# Tidy and count suffixes
suffixes <- enframe(suffixes) %>%
# drop obs which had only one syllable left (start with capital letter)
filter(!str_detect(value, "^[A-Z]")) %>%
# Count values
count(value) %>%
# Calculate proportion
mutate(percent = n / cumsum(n)[length(n)]) %>%
# Add a hyphen in beginning of suffix
mutate(value = str_c("-", value)) %>%
# Change suffix to factor (for correct order in bar chart)
mutate(suffix = factor(value, levels = value[order(n)])) %>%
# Sort data
select(suffix, n, percent, -value) %>%
arrange(desc(n))
# Show 10 most common suffixes
head(suffixes, 10)
# Visualize data
ggplot(data = filter(suffixes, n > 5)) +
geom_bar(aes(x = suffix, y = n), width = 0.8, fill = "#009E73", stat = "identity") +
coord_flip() +
theme_light() +
theme(text = element_text(family = "Merriweather"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
xlab("") +
ylab("") +
labs(caption = "Note: Only suffixes with more than 5 occurrences are displayed.")
# Compare the syllables based on the two dictionaries
syllables %>%
count(french == german)
# Load packages
library(tidyverse)
library(readxl)
library(nominatim)
library(leaflet)
library(gridExtra)
# Create basic leaflet map
## Get coordinates of cinemas
cinema_map_raw <- osm_search("cinema strasbourg", limit=20, key = "Dou2eQtrhYMP1hsuTSLr3mXuGbiJ66sy")
## Tidy data
cinema_map <- cinema_map_raw %>%
transmute(name = unlist(map(str_split(cinema_map_raw$display_name, ","), pluck(1))),
lat = lat,
lon = lon)
## Define map
map <- leaflet(cinema_map) %>%
addTiles() %>%
addMarkers(
lng = ~lon,
lat = ~lat,
popup = ~name
)  %>%
# Set view to Strasbourg city
setView(lng = 7.7534101, lat = 48.5812226, zoom = 14)
map
## Load sheets from Excel file
load_sheet <- function(sheet_name, i){
path <- "/home/david/Documents/GitHub/chodera.github.io/assets/projects/6. Cinemas in Strasbourg/"
sheet_name <- read_excel(str_c(path, "exploitation - données par commune.xlsx"), sheet = sheet_name, skip = i)
}
## Tidy sheets
clean_sheet <- function(sheet){
# Get name of data frame
df_name <- deparse(substitute(sheet))
sheet <- sheet %>%
# Rename columns
rename(code = "...1",
city = "...2") %>%
# Filter for Strasbourg
filter(city == "Strasbourg") %>%
gather(c("1960":"2017"), key = "year", value = "col") %>%
select(-c(code, city)) %>%
mutate(year = as.numeric(year))
# Set correct column name
names(sheet)[names(sheet) == "col"] <- df_name
# Assign changed data frame to original data frame
assign(df_name, sheet, envir = .GlobalEnv)
}
## Set correct column names
set_col <- function(list, names){
for (i in 1:length(list)){
names(list[[i]])[[2]] <- sheet_names[[i]]
}
return(list)
}
# Load data
number_of_cinemas <- load_sheet("établissements", 6)
screens <- load_sheet("écrans", 6)
seats <- load_sheet("fauteuils", 6)
multiplex <- load_sheet("multiplexes", 6)
showing <- load_sheet("séances", 6)
entries <- load_sheet("entrées", 6)
revenue <- load_sheet("recettes", 6)
avg_rev_per_entry <- load_sheet("RME", 6)
frequentation_index <- load_sheet("indice de fréquentation", 8)
occupancy_rate <- load_sheet("taux d'occupation des fauteuils", 6)
# Assign sheet_names to a vector
sheet_names <- c("number_of_cinemas",
"screens",
"seats",
"multiplex",
"showing",
"entries",
"revenue",
"avg_rev_per_entry",
"frequentation_index",
"occupancy_rate")
# Assign data frames to a list
data <- list(number_of_cinemas,
screens,
seats,
multiplex,
showing,
entries,
revenue,
avg_rev_per_entry,
frequentation_index,
occupancy_rate)
names(data) <- sheet_names
# Clean data
clean_data <- map(data, clean_sheet) %>%
set_col(sheet_names)
# Join data frames
cinemas_stras <- left_join(clean_data$number_of_cinemas, clean_data$screens, by = "year") %>%
left_join(., clean_data$seats, by = "year") %>%
left_join(., clean_data$multiplex, by = "year") %>%
left_join(., clean_data$showing, by = "year") %>%
left_join(., clean_data$entries, by = "year") %>%
left_join(., clean_data$revenue, by = "year") %>%
left_join(., clean_data$avg_rev_per_entry, by = "year") %>%
left_join(., clean_data$frequentation_index, by = "year") %>%
left_join(., clean_data$occupancy_rate, by = "year")
# Remove separate data frames
rm(list = c(sheet_names, "clean_data", "data"))
# Save data
write_csv(cinemas_stras, "cinemas_stras.csv")
# Plot data
## Number of cinemas
ggplot(data = cinemas_stras) +
aes(x = year, y = number_of_cinemas, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(breaks = c(0:9)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of cinemas") +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
seats <- ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red") +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
seats
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", size = 2) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", size = 3) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", size = 4) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", size = 5) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", size = 6) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", alpha = 0.5, size = 6) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", alpha = 0.3, size = 6) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", alpha = 0.4, size = 6) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
## Number of seats
ggplot(data = cinemas_stras) +
aes(x = year, y = seats, group = 1) +
geom_line() +
scale_x_continuous(breaks = c(1992:2017)[seq(1, length(c(1992:2017)), 2)], limits = c(1992, 2017)) +
scale_y_continuous(limits = c(1, 10000)) +
expand_limits(y = 1) +
labs(x = "Year",
y = "Number of seats") +
geom_vline(xintercept = 1999.5, colour = "red", alpha = 0.3, size = 6) +
annotate("text", x = 2005, y = 3800, label = "Opening of multiplex cinema", family="Merriweather", size = 3) +
theme_bw() +
theme(text=element_text(family="Merriweather"),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "lightgray"),
panel.grid.major.y = element_line(colour = "lightgray"),
axis.text.x = element_text(colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(colour="black"))
source('~/Documents/GitHub/chodera.github.io/assets/projects/6. Cinemas in Strasbourg/cinemas_stras.R', echo=TRUE)
shiny::runApp('~/Documents/GitHub/chodera.github.io/assets/projects/6. Cinemas in Strasbourg/cinemas-app')
source('~/Documents/GitHub/chodera.github.io/assets/projects/6. Cinemas in Strasbourg/cinemas_stras.R', echo=TRUE)
runApp('~/Documents/GitHub/chodera.github.io/assets/projects/6. Cinemas in Strasbourg/cinemas-app')
runApp('~/Documents/GitHub/chodera.github.io/assets/projects/6. Cinemas in Strasbourg/cinemas-app')
